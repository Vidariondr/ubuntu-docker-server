services:
  firefly:
    container_name: firefly
    image: fireflyiii/core:latest
    security_opt:
      - no-new-privileges:true
    hostname: app
    restart: unless-stopped
    volumes:
      - "${DOCKERDIR}/appdata/firefly/firefly_iii_upload:/var/www/html/storage/upload"
    env_file: "../../appdata/firefly/.env"
    networks:
      docker_network:
        ipv4_address: ${IP_FIREFLY}
    ports:
      - "${FIREFLY_EXT_PORT}:${FIREFLY_INT_PORT}"
    depends_on:
      - firefly-db
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}

  firefly-db:
    image: mariadb:lts
    security_opt:
      - no-new-privileges:true
    hostname: db
    container_name: firefly-db
    restart: unless-stopped
    env_file: "../../appdata/firefly/.db.env"
    networks:
      docker_network:
        ipv4_address: ${IP_FIREFLY_DB}
    volumes:
      - "${DOCKERDIR}/appdata/firefly/firefly_iii_db:/var/lib/mysql"
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}

  firefly-cron:
    #
    # To make this work, set STATIC_CRON_TOKEN in your .env file or as an environment variable and replace REPLACEME below
    # The STATIC_CRON_TOKEN must be *exactly* 32 characters long
    #
    image: alpine
    restart: always
    security_opt:
      - no-new-privileges:true
    container_name: firefly-cron
    command: sh -c "echo \"0 3 * * * wget -qO- http://firefly:${FIREFLY_INT_PORT}/api/v1/cron/${FIREFLY_CRON_TOKEN}\" | crontab - && crond -f -L /dev/stdout"
    networks:
      docker_network:
        ipv4_address: ${IP_FIREFLY_CRON}
    environment:
      TZ: ${TZ}
      PUID: ${PUID}
      PGID: ${PGID}
